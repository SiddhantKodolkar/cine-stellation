"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/MovieData.js":
/*!*****************************************!*\
  !*** ./src/app/components/MovieData.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useMoviesData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\n// Optional: genre color mapping\nconst genreColors = {\n    Comedy: '#f1fa8c',\n    'Sci-Fi': '#8be9fd',\n    Adventure: '#50fa7b',\n    Animation: '#bd93f9',\n    Children: '#ff79c6',\n    Fantasy: '#ffb86c',\n    Romance: '#ff5555',\n    Drama: '#6272a4',\n    Thriller: '#ff79c6',\n    Mystery: '#ffb86c'\n};\nfunction getColor(genres) {\n    // Pick first genre that has a color, fallback to gray\n    for (const g of genres){\n        if (genreColors[g]) return genreColors[g];\n    }\n    return '#cccccc';\n}\n// Force-directed positioning algorithm\nfunction applyForceLayout(movies) {\n    let iterations = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 50;\n    const nodes = JSON.parse(JSON.stringify(movies));\n    const k = 15; // smaller optimal distance => tighter layout\n    const canvasWidth = window.innerWidth;\n    const canvasHeight = window.innerHeight;\n    nodes.forEach((node, i)=>{\n        const gridSize = Math.ceil(Math.sqrt(nodes.length));\n        const col = i % gridSize;\n        const row = Math.floor(i / gridSize);\n        const spreadX = canvasWidth * 0.4; // reduced spread\n        const spreadY = canvasHeight * 0.4;\n        node.x = canvasWidth * 0.3 + col / gridSize * spreadX;\n        node.y = canvasHeight * 0.3 + row / gridSize * spreadY;\n        node.vx = 0;\n        node.vy = 0;\n    });\n    for(let iter = 0; iter < iterations; iter++){\n        for(let i = 0; i < nodes.length; i++){\n            for(let j = i + 1; j < nodes.length; j++){\n                const node1 = nodes[i];\n                const node2 = nodes[j];\n                const dx = node2.x - node1.x;\n                const dy = node2.y - node1.y;\n                const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n                let force = k * k / distance;\n                if (node1.similarTo && node1.similarTo.includes(node2.id)) {\n                    const similarity = node1.similarityScores[node2.id] || 0.5;\n                    force *= 1 - similarity * 0.7;\n                }\n                if (distance > 0) {\n                    const forceX = dx / distance * force;\n                    const forceY = dy / distance * force;\n                    node1.vx -= forceX;\n                    node1.vy -= forceY;\n                    node2.vx += forceX;\n                    node2.vy += forceY;\n                }\n            }\n        }\n        for(let i = 0; i < nodes.length; i++){\n            const node = nodes[i];\n            if (node.similarTo && node.similarTo.length > 0) {\n                for (const targetId of node.similarTo){\n                    const targetNode = nodes.find((n)=>n.id === targetId);\n                    if (targetNode) {\n                        const dx = targetNode.x - node.x;\n                        const dy = targetNode.y - node.y;\n                        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n                        const similarity = node.similarityScores[targetId] || 0.5;\n                        const force = distance * similarity * 0.07; // slightly stronger attraction\n                        if (distance > 0) {\n                            const forceX = dx / distance * force;\n                            const forceY = dy / distance * force;\n                            node.vx += forceX;\n                            node.vy += forceY;\n                        }\n                    }\n                }\n            }\n        }\n        for (const node of nodes){\n            node.x += node.vx;\n            node.y += node.vy;\n            const padding = 20; // tighter boundary\n            if (node.x < padding) node.vx += 1;\n            if (node.x > canvasWidth - padding) node.vx -= 1;\n            if (node.y < padding) node.vy += 1;\n            if (node.y > canvasHeight - padding) node.vy -= 1;\n            node.vx *= 0.9;\n            node.vy *= 0.9;\n        }\n    }\n    for(let i = 0; i < nodes.length; i++){\n        for(let j = i + 1; j < nodes.length; j++){\n            const node1 = nodes[i];\n            const node2 = nodes[j];\n            const dx = node2.x - node1.x;\n            const dy = node2.y - node1.y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            const minDistance = node1.radius + node2.radius + 3;\n            if (distance < minDistance) {\n                const overlap = minDistance - distance;\n                const moveX = dx / distance * overlap * 0.5;\n                const moveY = dy / distance * overlap * 0.5;\n                node1.x -= moveX;\n                node1.y -= moveY;\n                node2.x += moveX;\n                node2.y += moveY;\n            }\n        }\n    }\n    return nodes;\n}\nfunction useMoviesData() {\n    _s();\n    const [movies, setMovies] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMoviesData.useEffect\": ()=>{\n            async function fetchData() {\n                try {\n                    const res = await fetch('/constellation_data.json');\n                    const raw = await res.json();\n                    // Map of movieId => movieData\n                    const movieMap = {};\n                    raw.movies.forEach({\n                        \"useMoviesData.useEffect.fetchData\": (movie)=>{\n                            movieMap[movie.id] = movie;\n                        }\n                    }[\"useMoviesData.useEffect.fetchData\"]);\n                    // Prepare similarity lookup: movieId => { similarTo: [...], similarityScores: {...} }\n                    const similarityMap = {};\n                    raw.connections.forEach({\n                        \"useMoviesData.useEffect.fetchData\": (conn)=>{\n                            if (!similarityMap[conn.source]) {\n                                similarityMap[conn.source] = {\n                                    similarTo: [],\n                                    similarityScores: {}\n                                };\n                            }\n                            similarityMap[conn.source].similarTo.push(conn.target);\n                            similarityMap[conn.source].similarityScores[conn.target] = conn.similarity;\n                            // Bidirectional (optional depending on your logic)\n                            if (!similarityMap[conn.target]) {\n                                similarityMap[conn.target] = {\n                                    similarTo: [],\n                                    similarityScores: {}\n                                };\n                            }\n                            similarityMap[conn.target].similarTo.push(conn.source);\n                            similarityMap[conn.target].similarityScores[conn.source] = conn.similarity;\n                        }\n                    }[\"useMoviesData.useEffect.fetchData\"]);\n                    // First pass: create movie objects with basic properties\n                    const processedMovies = raw.movies.map({\n                        \"useMoviesData.useEffect.fetchData.processedMovies\": (movie)=>{\n                            const { similarTo = [], similarityScores = {} } = similarityMap[movie.id] || {};\n                            return {\n                                id: movie.id,\n                                title: movie.title,\n                                year: movie.year || \"\",\n                                x: 0,\n                                y: 0,\n                                radius: 8 + Math.min(5, similarTo.length / 3),\n                                color: getColor(movie.genres),\n                                genres: movie.genres,\n                                similarTo,\n                                similarityScores,\n                                // Add visibility property for fade effects\n                                visibility: 1\n                            };\n                        }\n                    }[\"useMoviesData.useEffect.fetchData.processedMovies\"]);\n                    // Apply force-directed layout\n                    const positionedMovies = applyForceLayout(processedMovies);\n                    setMovies(positionedMovies);\n                } catch (err) {\n                    console.error('Failed to load constellation data:', err);\n                }\n            }\n            fetchData();\n        }\n    }[\"useMoviesData.useEffect\"], []);\n    return movies;\n}\n_s(useMoviesData, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/MovieData.js\n"));

/***/ })

});